{"attributes":{"fieldAttrs":"{}","fieldFormatMap":"{}","fields":"[]","name":"JobEventsView","runtimeFieldMap":"{}","sourceFilters":"[]","timeFieldName":"date","title":"job_events*","typeMeta":"{}"},"coreMigrationVersion":"8.7.1","created_at":"2024-03-28T04:32:56.489Z","id":"b3f6e16c-de32-4742-8be3-a425962d113b","migrationVersion":{"index-pattern":"8.0.0"},"references":[],"type":"index-pattern","updated_at":"2024-03-28T04:32:56.489Z","version":"WzIwNSw0XQ=="}
{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"optionsJSON":"{\"useMargins\":true,\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"hidePanelTitles\":false}","panelsJSON":"[{\"version\":\"8.7.1\",\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":0,\"w\":8,\"h\":15,\"i\":\"fa5de3e4-4a2c-4004-a2f3-02bcb8deeb70\"},\"panelIndex\":\"fa5de3e4-4a2c-4004-a2f3-02bcb8deeb70\",\"embeddableConfig\":{\"attributes\":{\"title\":\"\",\"visualizationType\":\"lnsLegacyMetric\",\"type\":\"lens\",\"references\":[{\"type\":\"index-pattern\",\"id\":\"b3f6e16c-de32-4742-8be3-a425962d113b\",\"name\":\"indexpattern-datasource-layer-036c916e-05c1-425d-b5da-420e591d7703\"}],\"state\":{\"visualization\":{\"layerId\":\"036c916e-05c1-425d-b5da-420e591d7703\",\"accessor\":\"139f0370-6469-43fa-be40-9227b921abdd\",\"layerType\":\"data\"},\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filters\":[],\"datasourceStates\":{\"formBased\":{\"layers\":{\"036c916e-05c1-425d-b5da-420e591d7703\":{\"columns\":{\"139f0370-6469-43fa-be40-9227b921abdd\":{\"label\":\"Events\",\"dataType\":\"number\",\"operationType\":\"count\",\"isBucketed\":false,\"scale\":\"ratio\",\"sourceField\":\"___records___\",\"params\":{\"emptyAsNull\":true},\"customLabel\":true}},\"columnOrder\":[\"139f0370-6469-43fa-be40-9227b921abdd\"],\"incompleteColumns\":{}}}},\"textBased\":{\"layers\":{}}},\"internalReferences\":[],\"adHocDataViews\":{}}},\"enhancements\":{}}},{\"version\":\"8.7.1\",\"type\":\"visualization\",\"gridData\":{\"x\":8,\"y\":0,\"w\":39,\"h\":15,\"i\":\"375489bc-573d-4ef6-a2ca-5186c862658c\"},\"panelIndex\":\"375489bc-573d-4ef6-a2ca-5186c862658c\",\"embeddableConfig\":{\"savedVis\":{\"id\":\"\",\"title\":\"\",\"description\":\"\",\"type\":\"vega\",\"params\":{\"spec\":\"{\\n  $schema: https://vega.github.io/schema/vega/v5.json\\n  padding: {bottom: 20, left:20, right: 30, top: 20}\\n  signals: [\\n    {\\n      name: \\\"standardGap\\\"\\n      value: 14\\n      description: \\\"Gap as a percentage of fill domain\\\"\\n    }\\n    {\\n      name: \\\"base\\\"\\n      value: \\\"center\\\"\\n      description: \\\"How to stack (center or zero)\\\"\\n    }\\n  ]\\n  // Define the data source\\n  data: [\\n    {\\n      name: rawData\\n      url: {\\n        // Apply dashboard context filters when set\\n        %context%: true\\n        // Filter the time picker (upper right corner) with this field\\n        %timefield%: date\\n        // Which index to search\\n        index: job_events\\n        body: {\\n          \\\"size\\\":0, \\n          \\\"aggs\\\":{\\n            \\\"jobs\\\": {\\n              \\\"terms\\\": {\\n                \\\"size\\\": 10000, \\n                \\\"field\\\": \\\"status\\\"\\n              }\\n            }\\n          }\\n        }\\n      }\\n      format: {property: \\\"aggregations.jobs.buckets\\\"}\\n    } // end rawData\\n    {\\n      name: table\\n      values: [\\n        {category: \\\"Recruiter_chat_1\\\", stack: 1, sort: 1, labels: \\\"left\\\", gap: 20}\\n        {category: \\\"Recruiter_chat_2\\\", stack: 2, sort: 1, labels: \\\"right\\\", gap: 20}\\n        {category: \\\"Recruiter_chat_3\\\", stack: 3, sort: 1, ;labels: \\\"right\\\", gap: 0}\\n        {category: \\\"Applied\\\", stack: 1, sort: 2, labels: \\\"left\\\", gap: 20}\\n        {category: \\\"No_Response\\\", stack: 2, sort: 2, labels: \\\"right\\\", gap: 15}\\n        {category: \\\"Interview_1\\\", stack: 2, sort: 3, labels: \\\"right\\\", gap: 15}\\n        {category: \\\"Accepted\\\", stack: 4, sort: 1, labels: \\\"right\\\", gap: 20}\\n        {category: \\\"Rejected\\\", stack: 4, sort: 2, labels: \\\"right\\\", gap:20}\\n        {category: \\\"Turned_down\\\", stack: 4, sort: 3, labels: \\\"right\\\", gap: 20}\\n      ]\\n      transform: [\\n        {type: \\\"lookup\\\", from: \\\"rawData\\\", key: \\\"key\\\", values: [\\\"doc_count\\\"], fields:[\\\"category\\\"], as: [\\\"value\\\"]}\\n        {type: \\\"formula\\\", expr: \\\"datum.value ? datum.value: 0\\\", as: \\\"value\\\"}\\n      ]\\n    } // end table\\n    {\\n      name: journey\\n      // all possible routes\\n      values: [\\n      //{source: \\\"Recruiter_chat_1\\\", destination: \\\"Applied\\\"}\\n        {source: \\\"Recruiter_chat_1\\\", destination: \\\"Recruiter_chat_2\\\"}\\n      //{source: \\\"Recruiter_chat_2\\\", destination: \\\"Applied\\\"}\\n        {source: \\\"Recruiter_chat_2\\\", destination: \\\"Recruiter_chat_3\\\"}\\n      //{source: \\\"Recruiter_chat_3\\\", destination: \\\"Applied\\\"}\\n        {source: \\\"Applied\\\", destination: \\\"Interview_1\\\"}\\n        {source: \\\"Applied\\\", destination: \\\"Rejected\\\"}\\n        {source: \\\"Applied\\\", destination: \\\"No_Response\\\"}\\n        {source: \\\"Interview_1\\\", destination: \\\"Accepted\\\"}\\n        {source: \\\"Interview_1\\\", destination: \\\"Rejected\\\"}\\n        {source: \\\"Interview_1\\\", destination: \\\"Turned_down\\\"}\\n      ]\\n    } // end journey\\n    {\\n        \\\"name\\\": \\\"stacks\\\",\\n        \\\"source\\\": \\\"journey\\\",\\n        \\\"transform\\\": [\\n          {\\\"type\\\": \\\"filter\\\", \\\"expr\\\": \\\"datum.source != null\\\"},\\n          {\\\"type\\\": \\\"formula\\\", \\\"as\\\": \\\"end\\\", \\\"expr\\\": \\\"['source','destination']\\\"},\\n          {\\n            \\\"type\\\": \\\"formula\\\",\\n            \\\"as\\\": \\\"name\\\",\\n            \\\"expr\\\": \\\"[ datum.source,datum.destination]\\\"\\n          },\\n          {\\\"type\\\": \\\"project\\\", \\\"fields\\\": [\\\"end\\\", \\\"name\\\"]},\\n          {\\\"type\\\": \\\"flatten\\\", \\\"fields\\\": [\\\"end\\\", \\\"name\\\"]},\\n          {\\n            \\\"type\\\": \\\"lookup\\\",\\n            \\\"from\\\": \\\"table\\\",\\n            \\\"key\\\": \\\"category\\\",\\n            \\\"values\\\": [\\\"stack\\\", \\\"sort\\\", \\\"gap\\\", \\\"labels\\\", \\\"value\\\"],\\n            \\\"fields\\\": [\\\"name\\\"],\\n            \\\"as\\\": [\\\"stack\\\", \\\"sort\\\", \\\"gap\\\", \\\"labels\\\", \\\"value\\\"]\\n          },\\n          {\\n            \\\"type\\\": \\\"aggregate\\\",\\n            \\\"fields\\\": [\\\"value\\\", \\\"stack\\\", \\\"sort\\\", \\\"gap\\\", \\\"labels\\\"],\\n            \\\"groupby\\\": [\\\"end\\\", \\\"name\\\"],\\n            \\\"ops\\\": [\\\"max\\\", \\\"max\\\", \\\"max\\\", \\\"max\\\", \\\"max\\\"],\\n            \\\"as\\\": [\\\"value\\\", \\\"stack\\\", \\\"sort\\\", \\\"gap\\\", \\\"labels\\\"]\\n          },\\n          {\\n            \\\"type\\\": \\\"aggregate\\\",\\n            \\\"fields\\\": [\\\"value\\\", \\\"stack\\\", \\\"sort\\\", \\\"gap\\\", \\\"labels\\\"],\\n            \\\"groupby\\\": [\\\"name\\\"],\\n            \\\"ops\\\": [\\\"max\\\", \\\"max\\\", \\\"max\\\", \\\"max\\\", \\\"max\\\"],\\n            \\\"as\\\": [\\\"value\\\", \\\"stack\\\", \\\"sort\\\", \\\"gap\\\", \\\"labels\\\"]\\n          },\\n          {\\\"type\\\": \\\"formula\\\", \\\"as\\\": \\\"gap\\\", \\\"expr\\\": \\\"datum.gap?datum.gap:0\\\"}\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"maxValue\\\",\\n        \\\"source\\\": [\\\"stacks\\\"],\\n        \\\"transform\\\": [\\n          {\\n            \\\"type\\\": \\\"aggregate\\\",\\n            \\\"fields\\\": [\\\"value\\\"],\\n            \\\"groupby\\\": [\\\"stack\\\"],\\n            \\\"ops\\\": [\\\"sum\\\"],\\n            \\\"as\\\": [\\\"value\\\"]\\n          },\\n          {\\n            \\\"type\\\": \\\"aggregate\\\",\\n            \\\"fields\\\": [\\\"value\\\"],\\n            \\\"ops\\\": [\\\"max\\\"],\\n            \\\"as\\\": [\\\"value\\\"]\\n          }\\n        ]\\n      },\\n    {\\n        \\\"name\\\": \\\"plottedStacks\\\",\\n        \\\"source\\\": [\\\"stacks\\\"],\\n        \\\"transform\\\": [\\n          {\\n            \\\"type\\\": \\\"formula\\\",\\n            \\\"as\\\": \\\"spacer\\\",\\n            \\\"expr\\\": \\\" (data('maxValue')[0].value/100)*(standardGap+datum.gap)\\\"\\n          },\\n          {\\\"type\\\": \\\"formula\\\", \\\"as\\\": \\\"type\\\", \\\"expr\\\": \\\"['data','spacer']\\\"},\\n          {\\n            \\\"type\\\": \\\"formula\\\",\\n            \\\"as\\\": \\\"spacedValue\\\",\\n            \\\"expr\\\": \\\"[datum.value,datum.spacer]\\\"\\n          },\\n          {\\\"type\\\": \\\"flatten\\\", \\\"fields\\\": [\\\"type\\\", \\\"spacedValue\\\"]},\\n          {\\n            \\\"type\\\": \\\"stack\\\",\\n            \\\"groupby\\\": [\\\"stack\\\"],\\n            \\\"sort\\\": {\\\"field\\\": \\\"sort\\\", \\\"order\\\": \\\"descending\\\"},\\n            \\\"field\\\": \\\"spacedValue\\\",\\n            \\\"offset\\\": {\\\"signal\\\": \\\"base\\\"}\\n          },\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"((datum.value)/2)+datum.y0\\\", \\\"as\\\": \\\"yc\\\"}\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"finalTable\\\",\\n        \\\"source\\\": [\\\"plottedStacks\\\"],\\n        \\\"transform\\\": [{\\\"type\\\": \\\"filter\\\", \\\"expr\\\": \\\"datum.type == 'data'\\\"}]\\n      },\\n      {\\n        \\\"name\\\": \\\"linkTable\\\",\\n        \\\"source\\\": [\\\"journey\\\"],\\n        \\\"transform\\\": [\\n          {\\\"type\\\": \\\"filter\\\", \\\"expr\\\": \\\"datum.source != null\\\"},\\n          {\\n            \\\"type\\\": \\\"lookup\\\",\\n            \\\"from\\\": \\\"finalTable\\\",\\n            \\\"key\\\": \\\"name\\\",\\n            \\\"values\\\": [\\\"y0\\\", \\\"y1\\\", \\\"stack\\\", \\\"sort\\\", \\\"value\\\"],\\n            \\\"fields\\\": [\\\"source\\\"],\\n            \\\"as\\\": [\\\"sourceStacky0\\\", \\\"sourceStacky1\\\", \\\"sourceStack\\\", \\\"sourceSort\\\", \\\"value\\\"]\\n          },\\n          // save source value before it gets stacked below\\n          {type: \\\"formula\\\", expr: \\\"datum.value\\\", as: \\\"sourceValue\\\"}\\n          {\\n            \\\"type\\\": \\\"lookup\\\",\\n            \\\"from\\\": \\\"finalTable\\\",\\n            \\\"key\\\": \\\"name\\\",\\n            \\\"values\\\": [\\\"y0\\\", \\\"y1\\\", \\\"stack\\\", \\\"sort\\\", \\\"value\\\"],\\n            \\\"fields\\\": [\\\"destination\\\"],\\n            \\\"as\\\": [\\n              \\\"destinationStacky0\\\",\\n              \\\"destinationStacky1\\\",\\n              \\\"destinationStack\\\",\\n              \\\"destinationSort\\\",\\n              \\\"value\\\"\\n            ]\\n          },\\n          {\\n            \\\"type\\\": \\\"stack\\\",\\n            \\\"groupby\\\": [\\\"source\\\"],\\n            \\\"sort\\\": {\\\"field\\\": \\\"destinationSort\\\", \\\"order\\\": \\\"descending\\\"},\\n            \\\"field\\\": \\\"value\\\",\\n            \\\"offset\\\": \\\"zero\\\",\\n            \\\"as\\\": [\\\"syi0\\\", \\\"syi1\\\"]\\n          },\\n          // tweak source data issues here:\\n          /*{type:\\\"formula\\\", expr:\\\"datum.source == 'Applied' && datum.destination == 'Rejected' ? datum.value : datum.syi1\\\", as: \\\"syi1\\\"} */\\n        /*  {type:\\\"formula\\\", expr:\\\"datum.source == 'Interview_1' && datum.destination == 'Rejected' ? datum.sourceValue : datum.syi1\\\", as: \\\"syi1\\\"} */\\n\\n          //\\n          {\\n            \\\"type\\\": \\\"formula\\\",\\n            \\\"expr\\\": \\\"datum.syi0+datum.sourceStacky0\\\",\\n            \\\"as\\\": \\\"sy0\\\"\\n          },\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"datum.sy0+datum.value\\\", \\\"as\\\": \\\"sy1\\\"},\\n        {type:\\\"formula\\\", expr:\\\"datum.source == 'Applied' && datum.destination == 'No_Response' ? datum.sourceValue : datum.sy1\\\", as: \\\"sy1\\\"}\\n        {type:\\\"formula\\\", expr:\\\"datum.source == 'Interview_1' && datum.destination == 'Rejected' ? datum.sourceValue : datum.syi1\\\", as: \\\"syi1\\\"},\\n        {type:\\\"formula\\\", expr:\\\"datum.source == 'Interview_1' && datum.destination == 'Rejected' ? datum.sourceValue : datum.sy1\\\", as: \\\"sy1\\\"},\\n          {\\n            \\\"type\\\": \\\"stack\\\",\\n            \\\"groupby\\\": [\\\"destination\\\"],\\n            \\\"sort\\\": {\\\"field\\\": \\\"sourceSort\\\", \\\"order\\\": \\\"descending\\\"},\\n            \\\"field\\\": \\\"value\\\",\\n            \\\"offset\\\": \\\"zero\\\",\\n            \\\"as\\\": [\\\"dyi0\\\", \\\"dyi1\\\"]\\n          },\\n          // tweak dest data issues here:\\n        {type:\\\"formula\\\", expr:\\\"(datum.source == 'Applied' && datum.destination == 'Rejected') || (datum.source == 'Interview_1' && datum.destination == 'Rejected') ? datum.syi0 : datum.dyi0\\\", as: \\\"dyi0\\\"},\\n        {type:\\\"formula\\\", expr:\\\"datum.source == 'Interview_1' && datum.destination == 'Rejected' ? 0 : datum.dyi0\\\", as: \\\"dyi0\\\"}\\n          {type:\\\"formula\\\", expr:\\\"datum.source == 'Applied' && datum.destination == 'Rejected' ? datum.value : datum.dyi1\\\", as: \\\"dyi1\\\"}\\n\\n\\n          {\\\"type\\\": \\\"formula\\\",\\\"expr\\\": \\\"datum.dyi0+datum.destinationStacky0\\\",\\\"as\\\": \\\"dy0\\\"},\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"datum.dy0+datum.value\\\", \\\"as\\\": \\\"dy1\\\"},\\n\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"((datum.value)/2)+datum.sy0\\\", \\\"as\\\": \\\"syc\\\"},\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"(datum.source == 'Applied' && datum.destination == 'No_Response') ? (datum.sourceValue/3.5)+datum.sy0 : datum.syc\\\", \\\"as\\\": \\\"syc\\\"},\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"(datum.source == 'Interview_1' && datum.destination == 'Rejected') ? (datum.sourceValue/2)+datum.sy0 : datum.syc\\\", \\\"as\\\": \\\"syc\\\"},\\n\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"((datum.value)/2)+datum.dy0\\\", \\\"as\\\": \\\"dyc\\\"},\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"(datum.source == 'Applied' && datum.destination == 'Rejected') ? (datum.sourceValue/55)+datum.dy0 : datum.dyc\\\", \\\"as\\\": \\\"dyc\\\"},\\n          {\\\"type\\\": \\\"formula\\\", \\\"expr\\\": \\\"(datum.source == 'Interview_1' && datum.destination == 'Rejected') ? (datum.sourceValue/2)+datum.dy0 : datum.dyc\\\", \\\"as\\\": \\\"dyc\\\"},\\n\\n          {\\n            \\\"type\\\": \\\"linkpath\\\",\\n            \\\"orient\\\": \\\"horizontal\\\",\\n            \\\"shape\\\": \\\"diagonal\\\",\\n            \\\"sourceY\\\": {\\\"expr\\\": \\\"scale('y', datum.syc)\\\"},\\n            \\\"sourceX\\\": {\\n              \\\"expr\\\": \\\"scale('x', toNumber(  datum.sourceStack))+ bandwidth('x')\\\"\\n            },\\n            \\\"targetY\\\": {\\\"expr\\\": \\\"scale('y', datum.dyc)\\\"},\\n            \\\"targetX\\\": {\\\"expr\\\": \\\"scale('x', datum.destinationStack)\\\"}\\n          },\\n          {\\n            \\\"type\\\": \\\"formula\\\",\\n            \\\"expr\\\": \\\"range('y')[0]-scale('y', datum.value)\\\",\\n            \\\"as\\\": \\\"strokeWidth\\\"\\n          },\\n          {\\n            \\\"type\\\": \\\"formula\\\",\\n            \\\"expr\\\": \\\"datum.source == 'Interview_1' && datum.destination == 'Rejected' ? range('y')[0]-scale('y', datum.sourceValue) : datum.strokeWidth\\\",\\n            \\\"as\\\": \\\"strokeWidth\\\"\\n          }\\n        ]\\n      }\\n  ] // end of data section\\n  scales: [\\n    {\\n      // calculates horizontal stack positioning\\n      name: x\\n      type: band\\n      range: width\\n      domain: {data: \\\"finalTable\\\", field: \\\"stack\\\"}\\n      paddingInner: 0.88\\n    }\\n    {\\n      // this scale goes up as high as the highest y1 value of all nodes\\n      name: y\\n      type: linear\\n      range: height\\n      domain: {data: \\\"finalTable\\\", field: \\\"y1\\\"}\\n    }\\n    {\\n      // ensure the colors stay the same when clicking\\n      name: color\\n      type: ordinal\\n      range: {scheme: \\\"darkmulti\\\"}\\n      domain: {data: \\\"stacks\\\", field: \\\"name\\\"}\\n    }\\n  ] // end of scales section\\n  marks: [\\n    {\\n      type: \\\"rect\\\"\\n      from: {data: \\\"finalTable\\\"}\\n      encode: {\\n        update: {\\n          x: {scale: \\\"x\\\", field: \\\"stack\\\"}\\n          width: {scale: \\\"x\\\", band: 1}\\n          y: {scale: \\\"y\\\", field: \\\"y0\\\"}\\n          y2: {scale: \\\"y\\\", field: \\\"y1\\\"}\\n          fill: {scale: \\\"color\\\", field: \\\"name\\\"}\\n          fillOpacity: {value: 0.75}\\n          strokeWidth: {value: 0}\\n          stroke: {scale: \\\"color\\\", field: \\\"name\\\"}\\n        },\\n        hover: {\\n          tooltip: {\\n            signal: \\\"{'Name':datum.name,'Value':datum.value}\\\"\\n          }\\n          fillOpacity: {value: 1}\\n        }\\n      }\\n    }\\n    {\\n      type: \\\"path\\\"\\n      name: \\\"links\\\"\\n      from: {data: \\\"linkTable\\\"}\\n      clip: true\\n      encode: {\\n        update: {\\n          strokeWidth: {field: \\\"strokeWidth\\\"}\\n          path: {field: \\\"path\\\"}\\n          strokeOpacity: {signal: 0.3}\\n          stroke: {field: \\\"destination\\\", scale: \\\"color\\\"}\\n        }\\n        hover: {\\n          tooltip: {\\n            signal: \\\"{'Source':datum.source,'Destination':datum.destination,'Value':datum.value}\\\"\\n          }\\n        }\\n      }\\n    }\\n    {\\n      type: \\\"group\\\"\\n      name: \\\"labelText\\\"\\n      zindex: 1\\n      from: {\\n        facet: {\\n          data: \\\"finalTable\\\"\\n          name: \\\"labelFacet\\\"\\n          groupby: [\\\"name\\\", \\\"stack\\\", \\\"yc\\\", \\\"value\\\", \\\"labels\\\"]\\n        }\\n      }\\n      clip: false\\n      encode: {\\n        update: {\\n          strokeWidth: {value: 1}\\n          stroke: {value: \\\"red\\\"}\\n          x: {\\n            signal: \\\"datum.labels=='left'?scale('x', datum.stack)-8 : scale('x', datum.stack) + (bandwidth('x'))+8\\\"\\n          }\\n          yc: {scale: \\\"y\\\", signal: \\\"datum.yc\\\"}\\n          width: {signal: 0}\\n          height: {signal: 0}\\n          fillOpacity: {signal: 0.1}\\n        }\\n      }\\n      marks: [\\n        { \\n          type: \\\"text\\\"\\n          name: \\\"heading\\\"\\n          from: {data: \\\"labelFacet\\\"}\\n          encode: {\\n            update: {\\n              x: {value: 0}\\n              y: {value: -2}\\n              text: {field: \\\"name\\\"}\\n              align: {signal: \\\"datum.labels=='left'?'right':'left'\\\"}\\n              fontWeight: {value: \\\"normal\\\"}\\n            }\\n          }\\n        }\\n        {\\n          type: \\\"text\\\"\\n          name: \\\"amount\\\"\\n          from: {data: \\\"labelFacet\\\"}\\n          encode: {\\n            update: {\\n              x: {value: 0}\\n              y: {value: 12}\\n              text: {signal: \\\"datum.value\\\"}\\n              align: {signal: \\\"datum.labels=='left'?'right':'left'\\\"}\\n            }\\n          }\\n        }\\n      ]\\n    } // end labelText\\n    {\\n      type: \\\"rect\\\"\\n      from: {data: \\\"labelText\\\"}\\n      encode: {\\n        update: {\\n          x: {field: \\\"bounds.x1\\\", offset: -2}\\n          x2: {field: \\\"bounds.x2\\\", offset: 2}\\n          y: {field: \\\"bounds.y1\\\", offset: -2}\\n          y2: {field: \\\"bounds.y2\\\", offset: 2}\\n          fill: {value: \\\"white\\\"}\\n          opacity: {value: 0.8}\\n          cornerRadius: {value: 4}\\n        }\\n      }\\n    }\\n  ] // end of marks section\\n  config: [\\n    view: {stroke: \\\"transparent\\\"}\\n    text: {fontSize: 13, fill: \\\"#333333\\\"}\\n  ]\\n}\"},\"uiState\":{},\"data\":{\"aggs\":[],\"searchSource\":{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}}},\"enhancements\":{}}}]","timeRestore":false,"title":"JobEventsDashboard","version":1},"coreMigrationVersion":"8.7.1","created_at":"2024-05-08T02:02:04.572Z","id":"e5b94160-ee03-11ee-b508-d71c06ef0244","migrationVersion":{"dashboard":"8.7.0"},"references":[{"id":"b3f6e16c-de32-4742-8be3-a425962d113b","name":"fa5de3e4-4a2c-4004-a2f3-02bcb8deeb70:indexpattern-datasource-layer-036c916e-05c1-425d-b5da-420e591d7703","type":"index-pattern"}],"type":"dashboard","updated_at":"2024-05-08T02:02:04.572Z","version":"WzEzMTA2LDExXQ=="}
{"excludedObjects":[],"excludedObjectsCount":0,"exportedCount":2,"missingRefCount":0,"missingReferences":[]}